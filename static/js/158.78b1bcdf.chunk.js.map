{"version":3,"file":"static/js/158.78b1bcdf.chunk.js","mappings":"uRACA,EAA4B,0BAA5B,EAA6D,qBAA7D,EAA2F,uBAA3F,EAAwJ,sB,SCK3IA,EAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAaA,OACE,mBAAQC,UAAWC,EAAnB,UACE,kBAAML,SARW,SAAAM,GACnBA,EAAEC,iBACFP,EAASE,GACTC,EAAS,GACV,EAIiCC,UAAWC,EAAzC,WACE,mBAAQG,KAAK,SAASJ,UAAWC,EAAjC,UACE,SAAC,MAAD,OAGF,kBACEI,KAAK,QACLC,MAAOR,EACPS,SArBa,SAAC,GAAgB,IAC5BD,EAD2B,EAAbE,OACdF,MACRP,EAASO,EAAMG,cAChB,EAmBOT,UAAWC,EACXG,KAAK,OACLM,YAAY,sBAKrB,EAEDf,EAAOgB,UAAY,CACjBf,SAAUgB,IAAAA,MCnCZ,IAsDA,EAtDmB,WACjB,OAA4Bf,EAAAA,EAAAA,UAAS,IAArC,eAAOgB,EAAP,KAAeC,EAAf,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAASF,EAAaG,IAAI,SAC1BC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAEyBC,EAAAA,EAAAA,eAAmBL,GAF5C,OAEUM,EAFV,OAGIV,EAAUU,EAAOC,SAHrB,gDAKIC,QAAQC,IAAR,MALJ,0DADc,sBASVT,GATW,WAAD,wBAUZU,EAEH,GAAE,CAACV,IAEJ,IAMMW,EAAUhB,EAAOiB,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACvC,OAAKD,GAAUC,GAIb,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMhB,GAA1C,WACE,gBACEiB,IAAG,yCAAoCJ,GACvCK,IAAKN,EACLO,MAAM,QAEPP,MAPID,GAHF,IAcV,IAED,OACE,4BACE,SAACpC,EAAD,CAAQC,SA1Be,SAAAE,GACzBmB,EAAgB,CACdnB,MAAAA,GAEH,KAuBG,wBAAK+B,MAGV,C,8FCxDKW,EAAU,mCACVC,EAAW,+BAEJlB,EAAM,CACXmB,WADW,WACG,OAAD,sHACMC,EAAAA,EAAAA,GAAM,GAAD,OACvBF,EADuB,wCACiBD,IAF5B,cACXI,EADW,yBAIVA,EAASC,MAJC,4CAKlB,EAEKC,gBARW,SAQKf,GAAK,OAAD,sHACDY,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,kBAAsBV,EAAtB,oBAAoCS,IADxC,cAClBI,EADkB,yBAEjBA,EAASC,MAFQ,4CAGzB,EACKE,eAZW,SAYIjD,GAAQ,OAAD,sHACH6C,EAAAA,EAAAA,GAAM,GAAD,OACvBF,EADuB,iCACUD,EADV,kBAC2B1C,IAF7B,cACpB8C,EADoB,yBAInBA,EAASC,MAJU,4CAK3B,EAEKG,QAnBW,SAmBHjB,GAAK,OAAD,sHACOY,EAAAA,EAAAA,GAAM,GAAD,OACvBF,EADuB,kBACLV,EADK,4BACiBS,IAF7B,cACVI,EADU,yBAITA,EAASC,MAJA,4CAKjB,EAEKI,WA1BW,SA0BAlB,GAAK,OAAD,sHACIY,EAAAA,EAAAA,GAAM,GAAD,OACvBF,EADuB,kBACLV,EADK,4BACiBS,IAF1B,cACbI,EADa,yBAIZA,EAASC,MAJG,4CAKpB,E","sources":["webpack://react-homework-template/./src/components/Search/Search.module.scss?94fa","components/Search/Search.jsx","Pages/MoviesPage/MoviesPage.jsx","components/shared/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"Search_searchbar__uubQU\",\"form\":\"Search_form__jUSwi\",\"button\":\"Search_button__W5MQY\",\"label\":\"Search_label__2bPAf\",\"input\":\"Search_input__klILD\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { HiSearch } from 'react-icons/hi';\nimport scss from '../Search/Search.module.scss';\n\nexport const Search = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = ({ target }) => {\n    const { value } = target;\n    setQuery(value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <header className={scss.searchbar}>\n      <form onSubmit={handleSubmit} className={scss.form}>\n        <button type=\"submit\" className={scss.button}>\n          <HiSearch />\n        </button>\n\n        <input\n          name=\"query\"\n          value={query}\n          onChange={handleChange}\n          className={scss.input}\n          type=\"text\"\n          placeholder=\"Search movies\"\n        />\n      </form>\n    </header>\n  );\n};\n\nSearch.prototype = {\n  onSubmit: PropTypes.func,\n};\n","import { useState, useEffect } from 'react';\nimport { API } from 'components/shared/api';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\n\nimport { Search } from 'components/Search/Search';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  // const [searchQuery, setSearchQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const search = searchParams.get('query');\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getMovie() {\n      try {\n        const result = await API.getSearchMovie(search);\n        setMovies(result.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    if (search) {\n      getMovie();\n    }\n  }, [search]);\n\n  const handleUpdateSearch = query => {\n    setSearchParams({\n      query,\n    });\n  };\n\n  const element = movies.map(({ id, title, poster_path }) => {\n    if (!title || !poster_path) {\n      return null;\n    }\n    return (\n      <li key={id}>\n        <Link to={`/movies/${id}`} state={{ from: location }}>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt={title}\n            width=\"300\"\n          />\n          {title}\n        </Link>\n      </li>\n    );\n  });\n\n  return (\n    <div>\n      <Search onSubmit={handleUpdateSearch} />\n      <ul>{element}</ul>\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = 'b72fb3135a2d69ab2146fd23de192433';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const API = {\n  async fetchTrend() {\n    const response = await axios(\n      `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n    );\n    return response.data;\n  },\n\n  async getMovieDetails(id) {\n    const response = await axios(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n  },\n  async getSearchMovie(query) {\n    const response = await axios(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data;\n  },\n\n  async getCast(id) {\n    const response = await axios(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return response.data;\n  },\n\n  async getReviews(id) {\n    const response = await axios(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n    );\n    return response.data;\n  },\n};\n"],"names":["Search","onSubmit","useState","query","setQuery","className","scss","e","preventDefault","type","name","value","onChange","target","toLowerCase","placeholder","prototype","PropTypes","movies","setMovies","useSearchParams","searchParams","setSearchParams","search","get","location","useLocation","useEffect","API","result","results","console","log","getMovie","element","map","id","title","poster_path","to","state","from","src","alt","width","API_KEY","BASE_URL","fetchTrend","axios","response","data","getMovieDetails","getSearchMovie","getCast","getReviews"],"sourceRoot":""}